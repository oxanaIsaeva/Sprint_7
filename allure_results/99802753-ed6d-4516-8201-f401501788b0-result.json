{"name": "Проверка, что чтобы создать курьера, нужно передать в ручку все обязательные поля", "status": "failed", "statusDetails": {"message": "AssertionError: assert (400 == 400 and {'code': 400,...етной записи'} == {'message': '...етной записи'}\n +  where 400 = <Response [400]>.status_code\n  \n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  {'code': 400}\n  Use -v to get more diff)", "trace": "self = <tests_create_courier.TestCreateCourier object at 0x1016669f0>, login = '', password = '12345', firstname = 'Oxana'\n\n    @pytest.mark.parametrize(\n        \"login, password, firstname\",\n        [\n            ['', '12345', 'Oxana'],\n            ['ohhOxana', '', 'Oxana']\n        ]\n    )\n    @allure.title('Проверка, что чтобы создать курьера, нужно передать в ручку все обязательные поля')\n    @allure.description('Запрос возвращает код ответа 400 и ответ: {\"message\": \"Недостаточно данных для создания '\n                        'учетной записи\"}')\n    @allure.issue('Тело ответа не соответствует спецификации')\n    def test_create_courier_mandatory_fields(self, login, password, firstname):\n        payload = {\"login\": login, \"password\": password, \"firstName\": firstname}\n        response = requests.post('http://qa-scooter.praktikum-services.ru/api/v1/courier', data=payload)\n        r = response.json()\n    \n>       assert response.status_code == 400 and r == Data.CC_RESPONSE_MANDATORY\nE       AssertionError: assert (400 == 400 and {'code': 400,...етной записи'} == {'message': '...етной записи'}\nE        +  where 400 = <Response [400]>.status_code\nE         \nE         Omitting 1 identical items, use -vv to show\nE         Left contains 1 more item:\nE         {'code': 400}\nE         Use -v to get more diff)\n\ntests_create_courier.py:62: AssertionError"}, "description": "Запрос возвращает код ответа 400 и ответ: {\"message\": \"Недостаточно данных для создания учетной записи\"}", "parameters": [{"name": "login", "value": "''"}, {"name": "password", "value": "'12345'"}, {"name": "firstname", "value": "'Oxana'"}], "start": 1710625181583, "stop": 1710625181651, "uuid": "af3ae8ce-1497-40c9-af66-41bb150fbf0e", "historyId": "e520d33a5c0d8a5f3df0a0748ce39190", "testCaseId": "225baf3ee481dd02718c34c590d984b3", "fullName": "tests_create_courier.TestCreateCourier#test_create_courier_mandatory_fields", "labels": [{"name": "suite", "value": "tests_create_courier"}, {"name": "subSuite", "value": "TestCreateCourier"}, {"name": "host", "value": "MacBook-Air-Oksana.local"}, {"name": "thread", "value": "6508-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests_create_courier"}], "links": [{"type": "issue", "url": "Тело ответа не соответствует спецификации", "name": "Тело ответа не соответствует спецификации"}]}